{"version":3,"file":"static/js/994.bbca50ed.chunk.js","mappings":"8NAQMA,EAAUC,EAAAA,GAAAA,IAAH,oGAMPC,EAASD,EAAAA,GAAAA,IAAH,+GAONE,EAASF,EAAAA,GAAAA,IAAH,wXAWF,SAACG,GAAD,OAAWA,EAAMC,OAAjB,IAMJC,EAAYL,EAAAA,GAAAA,IAAH,sYAMO,SAACG,GAAD,OAAWA,EAAMG,MAAMC,KAAvB,IAST,SAACJ,GAAD,OAAWA,EAAMG,MAAME,MAAMC,MAA7B,IAIPC,EAAQV,EAAAA,GAAAA,GAAH,uSAWE,SAACG,GAAD,OAAWA,EAAMG,MAAMK,GAAvB,IAKPC,EAAWZ,EAAAA,GAAAA,EAAH,wIAmEd,UA3Dc,WACZ,IAAMa,GAAWC,EAAAA,EAAAA,MAEjB,GAAiDC,EAAAA,EAAAA,UAC/C,CAAC,SAAU,eACX,kBAAMC,EAAAA,EAAAA,IAAU,cAAhB,IAFYC,EAAd,EAAQC,KAA0BC,EAAlC,EAAuBC,UAIvB,GAAyDL,EAAAA,EAAAA,UACvD,CAAC,SAAU,YACX,kBAAMC,EAAAA,EAAAA,IAAU,UAAhB,IAFYK,EAAd,EAAQH,KAIR,GAJA,EAA2BE,WAKzBL,EAAAA,EAAAA,UAAqB,CAAC,SAAU,cAAc,kBAAMC,EAAAA,EAAAA,IAAU,YAAhB,KADlCM,EAAd,EAAQJ,KAER,GAFA,EAA4BE,WAG1BL,EAAAA,EAAAA,UAAqB,CAAC,SAAU,aAAa,kBAAMC,EAAAA,EAAAA,IAAU,WAAhB,KADjCO,EAAd,EAAQL,KAAR,EAA4BE,WAG5BI,EAAAA,EAAAA,YAAU,WACJP,GACFQ,QAAQC,IAAI,YAAaT,EAE5B,GAAE,CAACA,IAEJ,IAAMU,GAAmBC,EAAAA,EAAAA,cACvB,SAACC,GACChB,EAAS,WAAD,OAAYgB,GACrB,GACD,CAAChB,IAGH,OACE,SAACd,EAAD,UACGoB,GACC,SAAClB,EAAD,0BAEA,iCACE,UAACC,EAAD,CACEE,SAAS0B,EAAAA,EAAAA,IAAqB,OAAPb,QAAO,IAAPA,OAAA,EAAAA,EAASc,QAAQ,GAAGC,gBAAiB,IAD9D,WAGE,UAACtB,EAAD,YACE,iCAAOO,QAAP,IAAOA,OAAP,EAAOA,EAASc,QAAQ,GAAGE,SAC3B,kBAAMC,GAAG,OAAT,2BAAmBjB,QAAnB,IAAmBA,OAAnB,EAAmBA,EAASc,QAAQ,GAAGI,oBAEzC,SAACvB,EAAD,iBAAWK,QAAX,IAAWA,OAAX,EAAWA,EAASc,QAAQ,GAAGK,YAC/B,SAAC/B,EAAD,CACEgC,QAAS,wBAAMV,GAAwB,OAAPV,QAAO,IAAPA,GAAA,UAAAA,EAASc,QAAQ,UAAjB,eAAqBG,IAAK,GAAjD,EADX,4BAMF,SAAC,IAAD,CAAaI,SAAS,MAAMpB,KAAMD,KAClC,SAAC,IAAD,CAAaqB,SAAS,UAAUpB,KAAMG,KACtC,SAAC,IAAD,CAAaiB,SAAS,WAAWpB,KAAMI,KACvC,SAAC,IAAD,CAAagB,SAAS,WAAWpB,KAAMK,QAKhD,C","sources":["Routes/Movie.tsx"],"sourcesContent":["import { useQuery } from \"react-query\";\r\nimport styled from \"styled-components\";\r\nimport { IGetMovies, getMovies } from \"@Apis/movieApi\";\r\nimport { makeImagePath } from \"@Utils/utils\";\r\nimport { useEffect, useCallback } from \"react\";\r\nimport MovieSlider from \"@Components/movies/movieSlider\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Wrapper = styled.div`\r\n  height: 300vh;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  color: white;\r\n`;\r\n\r\nconst Loader = styled.div`\r\n  height: 20vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Banner = styled.div<{ bgPhoto: string }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  height: 75vh;\r\n  padding: 60px;\r\n  background-image: linear-gradient(\r\n      rgba(255, 255, 255, 0.3),\r\n      rgba(0, 0, 0, 0.5),\r\n      rgba(0, 0, 0, 1)\r\n    ),\r\n    url(${(props) => props.bgPhoto});\r\n  background-size: cover;\r\n  background-position: center center;\r\n  background-repeat: no-repeat;\r\n`;\r\n\r\nconst BannerBtn = styled.div`\r\n  font-weight: 800;\r\n  font-size: 18px;\r\n  width: 150px;\r\n  text-align: center;\r\n  color: white;\r\n  background-color: ${(props) => props.theme.white};\r\n  border-radius: 5px;\r\n  margin: 5px 0;\r\n  padding: 5px;\r\n  margin-top: 15px;\r\n  cursor: pointer;\r\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\r\n  &:hover {\r\n    background-color: white;\r\n    color: ${(props) => props.theme.black.darker};\r\n  }\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 80%;\r\n  font-weight: 800;\r\n  font-size: 64px;\r\n  margin-bottom: 20px;\r\n  color: rgba(254, 211, 48, 0.8);\r\n  text-shadow: 2px 2px 2px black;\r\n  #vote {\r\n    margin-left: 20px;\r\n    color: ${(props) => props.theme.red};\r\n    font-size: 40px;\r\n  }\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  width: 55%;\r\n  font-size: 18px;\r\n  font-weight: 1000;\r\n  color: rgba(255, 255, 255, 0.8);\r\n  line-height: 1;\r\n`;\r\n\r\nconst Movie = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const { data: nowData, isLoading: nowLoading } = useQuery<IGetMovies>(\r\n    [\"movies\", \"nowPlaying\"],\r\n    () => getMovies(\"now_playing\")\r\n  );\r\n  const { data: popularData, isLoading: popularLoading } = useQuery<IGetMovies>(\r\n    [\"movies\", \"popular\"],\r\n    () => getMovies(\"popular\")\r\n  );\r\n  const { data: topRatedData, isLoading: topRatedLoading } =\r\n    useQuery<IGetMovies>([\"movies\", \"top_rated\"], () => getMovies(\"top_rated\"));\r\n  const { data: upcomingData, isLoading: upcomingLoading } =\r\n    useQuery<IGetMovies>([\"movies\", \"upcoming\"], () => getMovies(\"upcoming\"));\r\n\r\n  useEffect(() => {\r\n    if (nowData) {\r\n      console.log(\"nowData: \", nowData);\r\n    }\r\n  }, [nowData]);\r\n\r\n  const onClickDetailBtn = useCallback(\r\n    (movieId: string) => {\r\n      navigate(`/movies/${movieId}`);\r\n    },\r\n    [navigate]\r\n  );\r\n\r\n  return (\r\n    <Wrapper>\r\n      {nowLoading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Banner\r\n            bgPhoto={makeImagePath(nowData?.results[0].backdrop_path || \"\")}\r\n          >\r\n            <Title>\r\n              <span>{nowData?.results[0].title}</span>\r\n              <span id=\"vote\">â˜… {nowData?.results[0].vote_average}</span>\r\n            </Title>\r\n            <Overview>{nowData?.results[0].overview}</Overview>\r\n            <BannerBtn\r\n              onClick={() => onClickDetailBtn(nowData?.results[0]?.id + \"\")}\r\n            >\r\n              See Detail\r\n            </BannerBtn>\r\n          </Banner>\r\n          <MovieSlider dataType=\"now\" data={nowData} />\r\n          <MovieSlider dataType=\"popular\" data={popularData} />\r\n          <MovieSlider dataType=\"toprated\" data={topRatedData} />\r\n          <MovieSlider dataType=\"upcoming\" data={upcomingData} />\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n"],"names":["Wrapper","styled","Loader","Banner","props","bgPhoto","BannerBtn","theme","white","black","darker","Title","red","Overview","navigate","useNavigate","useQuery","getMovies","nowData","data","nowLoading","isLoading","popularData","topRatedData","upcomingData","useEffect","console","log","onClickDetailBtn","useCallback","movieId","makeImagePath","results","backdrop_path","title","id","vote_average","overview","onClick","dataType"],"sourceRoot":""}